/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BDLogica.LogCocinero;
import BDLogica.LogPedido;
import BDLogica.LogPlatopedido;
import BDLogica.exceptions.NonexistentEntityException;
import Entidades.Pedido;
import Entidades.Plato;
import Entidades.Platopedido;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author accel
 */
public class DespachoPedidoCocinero extends javax.swing.JInternalFrame {

    /**
     * Creates new form DespachoPedidoCocinero
     */
    Pedido objPedido = new Pedido();

    Platopedido objPlatoPedido = new Platopedido();

    LogPedido objLogPedido = new LogPedido();
    LogCocinero objLogCocinero = new LogCocinero();
    LogPlatopedido objLogPlatoPedido = new LogPlatopedido();

    List ArrayPedidos;
    List ArrayCocinero;
    List ArrayPlatosPedido;
    List cocinerosLogueados;

    static int rowPedido = -1;
    static int rowPlatosPedidoSelect = -1;

    public DespachoPedidoCocinero() throws IOException, FileNotFoundException, ClassNotFoundException {
        initComponents();
        
        this.cocinerosLogueados = cocinerosLogueados;
        
        CargarCombos();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePedidos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePlatosPedido = new javax.swing.JTable();
        jButtonActualizarPedidos = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButtonPlatoProcesado = new javax.swing.JButton();
        jButtonDespacharPedido = new javax.swing.JButton();
        jComboBoxCocinero = new javax.swing.JComboBox<>();
        jButtonProcesarPedido = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTablePedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Numero Pedido", "Estado", "TiempoPedido"
            }
        ));
        jTablePedidos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePedidosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablePedidos);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 112, -1, 145));

        jTablePlatosPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Estado", "Observacion", "Tiempo", "Cantidad"
            }
        ));
        jTablePlatosPedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePlatosPedidoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTablePlatosPedido);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 398, -1, 118));

        jButtonActualizarPedidos.setText("Actualizar Pedidos");
        jButtonActualizarPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarPedidosActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonActualizarPedidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 70, -1, -1));

        jLabel1.setText("Pedido");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 73, -1, -1));

        jLabel2.setText("Platos del pedido");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 364, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("COCINA");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, -1, -1));

        jButtonPlatoProcesado.setText("Plato Procesado");
        jButtonPlatoProcesado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlatoProcesadoActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonPlatoProcesado, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 560, -1, -1));

        jButtonDespacharPedido.setText("Despachar Pedido");
        jButtonDespacharPedido.setEnabled(false);
        jButtonDespacharPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDespacharPedidoActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonDespacharPedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 560, -1, -1));

        getContentPane().add(jComboBoxCocinero, new org.netbeans.lib.awtextra.AbsoluteConstraints(531, 153, -1, -1));

        jButtonProcesarPedido.setText("Procesar Pedido");
        jButtonProcesarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProcesarPedidoActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonProcesarPedido, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 275, -1, -1));

        jLabel5.setText("Cocinero a cargo del pedido");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(531, 112, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonActualizarPedidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarPedidosActionPerformed
            
            ActualizarTablaPedido();
       
    }//GEN-LAST:event_jButtonActualizarPedidosActionPerformed

    private void jButtonPlatoProcesadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlatoProcesadoActionPerformed
        try {
            FinalizarPlato(objPlatoPedido);
        } catch (Exception ex) {
            Logger.getLogger(DespachoPedidoCocinero.class.getName()).log(Level.SEVERE, null, ex);
        }
        leerPlatosPedido();
        ActivarBoton();
        

    }//GEN-LAST:event_jButtonPlatoProcesadoActionPerformed

    private void jButtonProcesarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProcesarPedidoActionPerformed

        
        for (Object objAux : ArrayPlatosPedido) {
            Platopedido objPlatoPedido = (Platopedido) objAux;
            if (objPlatoPedido.getEstado() == 1) {
                try {
                    cocinarPlato(objPlatoPedido);
                } catch (Exception ex) {
                    Logger.getLogger(DespachoPedidoCocinero.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
        objPedido.setEstado(2);
        try {
            objLogPedido.edit(objPedido);
        } catch (NonexistentEntityException ex) {
            Logger.getLogger(DespachoPedidoCocinero.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(DespachoPedidoCocinero.class.getName()).log(Level.SEVERE, null, ex);
        }
        leerPlatosPedido();
        ActualizarTablaPedido();
        ActivarBoton();
        


    }//GEN-LAST:event_jButtonProcesarPedidoActionPerformed

    private void jTablePlatosPedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePlatosPedidoMouseClicked

        rowPlatosPedidoSelect = jTablePlatosPedido.getSelectedRow();
        objPlatoPedido = (Platopedido) ArrayPlatosPedido.get(rowPlatosPedidoSelect);

    }//GEN-LAST:event_jTablePlatosPedidoMouseClicked

    private void jButtonDespacharPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDespacharPedidoActionPerformed

        objPedido.setEstado(3);
        try {
            objLogPedido.edit(objPedido);
        } catch (NonexistentEntityException ex) {
            Logger.getLogger(DespachoPedidoCocinero.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(DespachoPedidoCocinero.class.getName()).log(Level.SEVERE, null, ex);
        }
        ActualizarTablaPedido();


    }//GEN-LAST:event_jButtonDespacharPedidoActionPerformed

    private void jTablePedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePedidosMouseClicked
        rowPedido = jTablePedidos.getSelectedRow();
        objPedido = (Pedido) ArrayPedidos.get(rowPedido);
        ArrayPlatosPedido = (List<Platopedido>) objPedido.getPlatopedidoCollection();
    }//GEN-LAST:event_jTablePedidosMouseClicked
    

    public void CargarCombos() throws IOException, FileNotFoundException, ClassNotFoundException {
        this.jComboBoxCocinero.setModel(new DefaultComboBoxModel(objLogCocinero.findCocineroEntities().toArray()));

    }

    public void ActualizarTablaPedido() {
        ArrayPedidos = objLogPedido.findPedidoEntities();
        String estado = null;
        this.jTablePedidos.removeAll();
        Object columnas[] = {"Numero de pedido", "Estado", "Tiempo Estimado(m)"};
        DefaultTableModel modelo = new DefaultTableModel(null, columnas);
        jTablePedidos.setModel(modelo);
        for (Object objAux : ArrayPedidos) {
            Pedido objPedido = (Pedido) objAux;
            if (objPedido.getEstado() == 1) {
                estado = "Registrado";
            } else if (objPedido.getEstado() == 2) {
                estado = "Cocinando";
            } else if (objPedido.getEstado() == 3) {
                estado = "Despachado";
            } else if (objPedido.getEstado() == 4) {
                estado = "Pagando";
            } else if (objPedido.getEstado() == 5) {
                estado = "Finalizado";
            }
            String NewValor[] = {
                String.valueOf(objPedido.getNumeroPedido()),
                estado,
                String.valueOf(objPedido.getTiempoAproximado())
            };
            modelo.addRow(NewValor);
        }
    }

    public boolean ComprobarPlatos(Pedido pedido) throws IOException, FileNotFoundException, ClassNotFoundException {

        for (Platopedido objPlatoPedido : pedido.getPlatopedidoCollection()) {
            if (objPlatoPedido.getEstado() != 3) {
                return false;
            }
        }
        return true;
    }

    public void ActivarBoton() {
        //objPedido = objLogPedido.findPedido(objPedido.getIdPedido());
        try {
            if (ComprobarPlatos(objPedido)) {
                this.jButtonDespacharPedido.setEnabled(true);
            } else {
                this.jButtonDespacharPedido.setEnabled(false);
            };
        } catch (IOException ex) {
            Logger.getLogger(DespachoPedidoCocinero.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DespachoPedidoCocinero.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizarPedidos;
    private javax.swing.JButton jButtonDespacharPedido;
    private javax.swing.JButton jButtonPlatoProcesado;
    private javax.swing.JButton jButtonProcesarPedido;
    private javax.swing.JComboBox<String> jComboBoxCocinero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTablePedidos;
    private javax.swing.JTable jTablePlatosPedido;
    // End of variables declaration//GEN-END:variables

    public void leerPlatosPedido() {
        String estado = null;

        jTablePlatosPedido.removeAll();
        Object columnas[] = {"Nombre", "Estado", "Observacion", "Tiempo", "Cantidad"};
        DefaultTableModel modelo = new DefaultTableModel(null, columnas);
        jTablePlatosPedido.setModel(modelo);
        objPedido = (Pedido) ArrayPedidos.get(rowPedido);
        

        for (Object objAux : ArrayPlatosPedido) {
            Platopedido objPlatoPedido = (Platopedido) objAux;
            if (objPlatoPedido.getEstado() == 1) {
                estado = "Registrado";
            } else if (objPlatoPedido.getEstado() == 2) {
                estado = "Cocinando";
            } else if (objPlatoPedido.getEstado() == 3) {
                estado = "Finalizado";
            }
            String NewValor[] = {
                objPlatoPedido.getIdPlato().getNombre(),
                estado,
                objPlatoPedido.getObservacion(),
                String.valueOf(objPlatoPedido.getIdPlato().getTiempo()),
                String.valueOf(objPlatoPedido.getCantidad())

            };
            System.out.println(objPlatoPedido);
            modelo.addRow(NewValor);

        }
    }

    void cocinarPlato(Platopedido objPlatoPedido) throws Exception {
        objPlatoPedido.setEstado(2);
        objLogPlatoPedido.edit(objPlatoPedido);
    }

    private void FinalizarPlato(Platopedido objPlatoPedido) throws Exception {
        objPlatoPedido.setEstado(3);
        objLogPlatoPedido.edit(objPlatoPedido);
    }
}
